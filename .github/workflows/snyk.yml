# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up Snyk to analyze the full Snyk platform (Snyk Open Source, Snyk Code,
# Snyk Container and Snyk Infrastructure as Code)
# The setup installs the Snyk CLI - for more details on the possible commands
# check https://docs.snyk.io/snyk-cli/cli-reference
# The results of Snyk Code are then uploaded to GitHub Security Code Scanning
#
# In order to use the Snyk Action you will need to have a Snyk API token.
# More details in https://github.com/snyk/actions#getting-your-snyk-token
# or you can signup for free at https://snyk.io/login
#
# For more examples, including how to limit scans to only high-severity issues
# and fail PR checks, see https://github.com/snyk/actions/

name: Snyk Security

on:
  workflow_dispatch:

jobs:
  snyk_scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out main branch
      uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Cache Snyk
      id: cache-snyk
      uses: actions/cache@v4
      env:
        cache-name: cache-snyk
      with:
        path: ~/snyk
        key: ${{ runner.os }}-snyk

    - if: ${{ steps.cache-snyk.outputs.cache-hit != 'true' }}
      name: Install Snyk CLI
      run: |
        curl https://static.snyk.io/cli/latest/snyk-linux -o ~/snyk
        chmod +x ~/snyk

    - name: Snyk scan
      continue-on-error: true
      run: |
        dotnet build
        ~/snyk auth ${{ secrets.SNYK_TOKEN }}
        ~/snyk config set org=3b6229b4-e0fe-405e-8283-ac41405bf85c
        ~/snyk test --all-projects
        ~/snyk monitor --all-projects
        ~/snyk code test --report --project-name="WebGoat.NET"
        
